{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAmBA,MAAMC,EAAUC,SAASC,cAAc,SACjCC,EAAWF,SAASC,cAAc,kBAClCE,EAAUH,SAASC,cAAc,iBACjCG,EAAYJ,SAASC,cAAc,mBAEzCF,EAAQM,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOP,EAASQ,OAC5B,MAAMC,EAAOF,OAAON,EAAQO,OAC5B,IAAIE,EAAWH,OAAOL,EAAUM,OAChCG,QAAQC,IAAI,gBA9Bd,SAAuBF,EAAUJ,EAAOG,GACtC,OAAO,IAAII,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,IAAK,IAAIC,EAAI,EAAGA,GAAKT,EAAUS,IAC7BT,EAAWS,EACXC,YAAW,KACLJ,EACFF,EAAQ,uBAAqBJ,QAAiBJ,OAE5CS,EAAK,sBAAoBL,QAAeJ,SAE3CA,GACHA,GAAgBG,KAoBpBY,CAAcX,EAAUJ,EAAOG,GAC5Ba,MAAKC,IACJ5B,EAAA6B,OAAOC,QAAQF,MAEhBG,OAAMC,GAAShC,EAAA6B,OAAOI,QAAQD","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay, step) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    for (let i = 1; i <= position; i++) {\n      position = i;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        } else {\n          reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        }\n      }, delay);\n      delay = delay + step;\n    }\n  });\n}\n\nconst formRef = document.querySelector('.form');\nconst delayRef = document.querySelector('[name=\"delay\"]');\nconst stepRef = document.querySelector('[name=\"step\"]');\nconst amountRef = document.querySelector('[name=\"amount\"]');\n\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(delayRef.value);\n  const step = Number(stepRef.value);\n  let position = Number(amountRef.value);\n  console.log('gggggggggggg');\n\n  createPromise(position, delay, step)\n    .then(result => {\n      Notify.success(result);\n    })\n    .catch(error => Notify.failure(error));\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$delayRef","$47d4ff9957288465$var$stepRef","$47d4ff9957288465$var$amountRef","addEventListener","e","preventDefault","delay","Number","value","step","position","console","log","Promise","resolve","reject","shouldResolve","Math","random","i","setTimeout","$47d4ff9957288465$var$createPromise","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.56edd300.js.map"}