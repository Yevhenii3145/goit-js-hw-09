{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GAChCL,GACFI,EAAQ,uBAAwCE,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAEtDM,EAAK,sBAAqCC,OAAfR,EAAS,QAAYQ,OAANP,EAAM,UAGtD,IAAMQ,EAAUC,SAASC,cAAc,SACjCC,EAAWF,SAASC,cAAc,kBAClCE,EAAUH,SAASC,cAAc,iBAGnCG,EAFcJ,SAASC,cAAc,mBAElBI,MAEjBC,EAAgB,KACtBP,EAAQQ,iBAAiB,UACzB,WACE,IAAMC,EAAUN,EAASG,MAEnBf,GADQa,EAAQE,MACL,GACjBI,YAAW,WACLH,IAAkBF,IAGtBf,EAAcC,EAAUkB,GACrBE,MAAK,WACJvB,EAAAwB,OAAOC,QAAQC,WAEhBC,OAAM,WACL3B,EAAAwB,OAAOI,QAAQC,UAEnBV,GAAiB,EACjBhB,GAAY,KACXkB,GACHS,aAAY,WACNX,IAAkBF,GAGtBf,EAAcC,EAAU4B,WACvBA,Y","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }\n    reject(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}\nconst formRef = document.querySelector('.form');\nconst delayRef = document.querySelector('[name=\"delay\"]');\nconst stepRef = document.querySelector('[name=\"step\"]');\nconst amountRef = document.querySelector('[name=\"amount\"]');\n\nlet amount = amountRef.value;\n// console.log(amount);\nconst currentAmount = null;\nformRef.addEventListener('submit', constructor);\nfunction constructor() {\n  const firsDal = delayRef.value;\n  const delay = stepRef.value;\n  const position = 1;\n  setTimeout(() => {\n    if (currentAmount === amount) {\n      return;\n    }\n    createPromise(position, firsDal)\n      .then(() => {\n        Notify.success(result);\n      })\n      .catch(() => {\n        Notify.failure(error);\n      });\n    currentAmount += 1;\n    position += 1;\n  }, firsDal);\n  setInterval(() => {\n    if (currentAmount === amount) {\n      return;\n    }\n    createPromise(position, delStep);\n  }, delStep);\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","concat","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$delayRef","$ce04d3a99e08e73b$var$stepRef","$ce04d3a99e08e73b$var$amount","value","$ce04d3a99e08e73b$var$currentAmount","addEventListener","firsDal","setTimeout","then","Notify","success","result","catch","failure","error","setInterval","delStep"],"version":3,"file":"03-promises.8cc65f72.js.map"}