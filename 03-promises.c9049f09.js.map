{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,IAAK,IAAIC,EAAI,EAAGA,GAAKR,EAAUQ,IAC7BR,EAAWQ,EACXC,YAAW,KACLJ,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,SAE3CA,GACHA,GAAgBS,QAKtB,MAAMC,EAAO,CACXC,QAASC,SAASC,cAAc,SAChCC,SAAUF,SAASC,cAAc,kBACjCE,QAASH,SAASC,cAAc,iBAChCG,UAAWJ,SAASC,cAAc,oBAGpCH,EAAKC,QAAQM,iBAAiB,UAM9B,SAAsBC,GACpBA,EAAEC,iBACFC,QAAQC,IAAI,iBACZ,IAAIrB,EAAQsB,OAAOZ,EAAKI,SAASS,OACpBD,OAAOZ,EAAKK,QAAQQ,OAGjCzB,EAFiBwB,OAAOZ,EAAKM,UAAUO,OAEfvB,GACrBwB,MAAKC,IACJ7B,EAAA8B,OAAOC,QAAQF,MAEhBG,OAAMC,GAASjC,EAAA8B,OAAOI,QAAQD","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    for (let i = 1; i <= position; i++) {\n      position = i;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        } else {\n          reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        }\n      }, delay);\n      delay = delay + step;\n    }\n  });\n}\n\nconst refs = {\n  formRef: document.querySelector('.form'),\n  delayRef: document.querySelector('[name=\"delay\"]'),\n  stepRef: document.querySelector('[name=\"step\"]'),\n  amountRef: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.formRef.addEventListener('submit', onSubmitForm);\n// const formRef = document.querySelector('.form');\n// const delayRef = document.querySelector('[name=\"delay\"]');\n// const stepRef = document.querySelector('[name=\"step\"]');\n// const amountRef = document.querySelector('[name=\"amount\"]');\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  console.log('ggggggggggggg');\n  let delay = Number(refs.delayRef.value);\n  const step = Number(refs.stepRef.value);\n  const position = Number(refs.amountRef.value);\n\n  createPromise(position, delay)\n    .then(result => {\n      Notify.success(result);\n    })\n    .catch(error => Notify.failure(error));\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","i","setTimeout","step","$47d4ff9957288465$var$refs","formRef","document","querySelector","delayRef","stepRef","amountRef","addEventListener","e","preventDefault","console","log","Number","value","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.c9049f09.js.map"}